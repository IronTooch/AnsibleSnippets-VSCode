{

	"Ansible.BuiltIn.Apt_Packages":{
		"prefix": ["ansible.builtin.apt_packages"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.apt:",
			"    name:  ${2}",
			"    state: ${3|present,absent,latest,fixed,build-dep|}",
			"    update_cache: ${4|yes,no|}",
			"    force: ${5|no,yes|}",
			"$0"
		],
		"description": "Used for Ansible Apt Module to install packages from repos",
		"scope": "ansible"
	},

	"Ansible.BuiltIn.Apt_FullUpdate":{
		"prefix": ["ansible.builtin.apt_fullupdate"],
		"body": [
			"- name: Update all packages to latest version",
			"  ansible.builtin.apt:",
			"    name:  \"*\"",
			"    state: \"latest\"",
			"$0"
		],
		"description": "Used for Ansible Apt Module to update all packages to latest",
		"scope": "ansible"
	},

	"Ansible.BuiltIn.Apt_InstallDeb":{
		"prefix": ["ansible.builtin.apt_deb"],
		"body": [
			"- name: Install package from ${1:debfile}",
			"  ansible.builtin.apt:",
			"    deb:  \"${2:debpath}/${1}\"",
			"$0"
		],
		"description": "Used for Ansible Apt Module to install a specific deb file",
		"scope": "ansible"
	},

	"Ansible.BuiltIn.Copy":{
		"prefix": ["ansible.builtin.copy"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.copy:",
			"    src:  ${2}",
			"    dest: ${3}",
			"    remote_src: ${4|yes,no|}",
			"    force: ${5|yes,no|}",
			"$0"
		],
		"description": "Used for Ansible User Module",
		"scope": "ansible"
	},

	"Ansible.BuiltIn.Debug":{
		"prefix": ["ansible.builtin.debug"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.debug:",
			"    msg: ${2:message}",
			"    ${3:verbosity: ${4|0,1,2,3,4,5|}}",
			"$0"
		],
		"description": "Used for Ansible Wait_for Module",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.FileDirectory":{
		"prefix": ["ansible.builtin.file"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.file:",
			"    path: ${2:path}",
			"    state: directory",
			"    mode: '${3:0755}'",
			"$0"
		],
		"description": "Used for Ansible File Module to make directories",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.FileChown":{
		"prefix": ["ansible.builtin.file"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.file:",
			"    path: ${2:path}",
			"    state: directory",
			"    recurse: ${3|yes,no|}",
			"    owner: '${4:owner}'",
			"    group: '${5:group}'",
			"$0"
		],
		"description": "Used for Ansible File Module to Chown directories",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.GetUrl":{
		"prefix": ["ansible.builtin.get_url"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.get_url:",
			"    url: \"${2:url}\"",
			"    dest: \"${3:dest}\"",
			"    force: \"${4|yes,no|}\"",	
			"    ${5:owner: \"${6:owner}\"}",
			"    ${7:group: \"${8:owner}\"}",
			"    ${9:mode: \"${10:owner}\"}",
			"    ${11:validate_certs: \"${12|yes,no|}\"}",	
			"$0"
		],
		"description": "Used for Ansible Get_url Module to downloads files from HTTP, HTTPS, or FTP to node"
	},

	"Ansible.BuiltIn.Git":{
		"prefix": ["ansible.builtin.git"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.git:",
			"    repo: \"${2:url}\"",
			"    dest: \"${3:dest}\"",
			"    force: \"${4|yes,no|}\"",	
			"$0"
		],
		"description": "Used for Ansible Git Module to download files from Git",
	},

	"Ansible.BuiltIn.Group":{
		"prefix": ["ansible.builtin.group"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.group:",
			"    name: \"${2:Group_Name}\"",
			"    ${3:gid: \"${4:guid}\"}",
			"    local: ${5|no,yes|}",
			"    state: ${6|present,absent|}", 
			"    system: ${7|no,yes|}",
			"$0"
		],
		"description": "Used for Ansible Group Module to make user groups",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.Hostname":{
		"prefix": ["ansible.builtin.hostname"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.hostname:",
			"    name: \"${2:desired_hostname}\"",
			"    ${3:use: \"${4|alpine,debian,freebsd,generic,macos,macosx,darwin,openbsd,openrc,redhat,sles,solaris,systemd|}\"}",
			"$0"
		],
		"description": "Used for Ansible Hostname Module to change a system hostname",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.IncludeVars":{
		"prefix": ["ansible.builtin.include_vars"],
		"body": [
			"- name: ${1:Description}, loading dynamically at run-time",
			"  ansible.builtin.include_vars: ",
			"    file: \"${2:file_name}\"",	
			"    ${3:new_name_needed: \"name: \"${4:name_of_new_variable}\"}",
			"$0"
		],
		"description": "Used for Ansible IncludeVars Module to load variables Dynamically at runtime",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.IpTables":{
		"prefix": ["ansible.builtin.iptables"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.iptables:",
			"    action: \"${2|append,insert|}\"",
			"    chain: '${3|INPUT,FORWARD,OUTPUT,PREROUTING,POSTROUTING,SECMARK,CONNSECMARK|}'",
			"    comment: ${4:comment}",
			"    destination: ${5:destination}",
			"    destination_port: ${6:destination_port}",
			"    dst_range: ${7:destination_range}",	
			"    flush: ${8|yes,no|}",
			"    icmp_type: ${9:icmp_type}",
			"    in_interface: ${10:in_interface}",	
			"    ip_version: ${11|ipv4,ipv6|}",	
			"    jump: ${12:jump}",	
			"    out_interface: ${13:out_interface}",
			"    policy: ${14|ACCEPT,DROP,QUEUE,RETURN|}",
			"    protocol: ${15|tcp,udp,udplite,icmp,ipv6-icmp,icmpv6,esp,ah,sctp,all|}",	
			"    source: ${16:source}",	
			"    source_port: ${17:source_port}",
			"    source_range: ${18:source_range}",
			"    state: ${19|present,absent|}",
			"    table: ${20|filter,nat,mangle,raw,security|}",			
			"    to_destination: ${21:to_destination}",	
			"    to_ports: ${22:to_ports}",
			"    to_source: ${23:to_source}",	
			"$0"
		],
		"description": "Used for Ansible IPTables Module to make/change IP Tables rules",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.LineInFile":{
		"prefix": ["ansible.builtin.lineinfile"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.lineinfile:",
			"    path: ${2:path}",
			"    state: ${3|present,absent|}",
			"    line: '${4:myline}'",
			"$0"
		],
		"description": "Used for Ansible File Module to make directories",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.RpmKey":{
		"prefix": ["ansible.builtin.rpm_key"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.rpm_key:",
			"    key: \"${2:key_url}\"",
			"    state: ${3|present,absent|}",
			"    validate_certs: ${4|yes,no|}",
			"$0"
		],
		"description": "Used for Ansible File Module to make directories",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.Service":{
		"prefix": ["ansible.builtin.service"],
		"body": [
			"- name: Ensure ${1:servicename} is ${2|started,stopped,restarted,reloaded|}",
			"  ansible.builtin.service:",
			"    name: ${1:servicename}",
			"    state: ${2}",
			"    enabled: ${3|yes,no|}",
			"$0"
		],
		"description": "Used for Ansible Services Module",
		"scope": "ansible"
	},

	"Ansible.BuiltIn.SetFact":{
		"prefix": ["ansible.builtin.set_fact"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.set_fact:",
			"    ${2:my_fact_name}:  \"${3}\"",
			"$0"
		],
		"description": "Used for Ansible Set Fact Module",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.Shell":{
		"prefix": ["ansible.builtin.shell"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.shell:",
			"    cmd:  \"${2}\"",
			"    ${3:chdir: \"${4}\"}",
			"$0"
		],
		"description": "Used for Ansible Shell Module",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.Template":{
		"prefix": ["ansible.builtin.template"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.template:",
			"    src: ${2:local_source}",
			"    dest: ${3:remote_destination}",
			"    force: ${4|yes,no|}",
			"$0"
		],
		"description": "Used for Ansible Temmplate Module",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.Unarchive":{
		"prefix": ["ansible.builtin.unarchive"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.unarchive:",
			"    src: \"${2:source_path}\"",
			"    dest: '${3:destination_path}'",
			"    remote_src: ${4|yes,no|}",
			"    ${5:creates: \"${6:created_file}\"}",
			"$0"
		],
		"description": "Used for Ansible File Module to make directories",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.User":{
		"prefix": ["ansible.builtin.user"],
		"body": [
			"- name: ${1:Description} ${2:Username}",
			"  ansible.builtin.userr:",
			"    name: ${2}",
			"    commment: ${1}",
			"    state: ${3|present,absent|}",
			"    append: ${4|no,yes|}  #Append Groups to user, instead of overwrite",
			"    create_home: ${5|yes,no|}",
			"    groups: ${6:groups}",
			"    system: ${7|no,yes|}",
			"$0"
		],
		"description": "Used for Ansible User Module",
		"scope": "ansible"
	},

	"Ansible.BuiltIn.WaitForFile":{
		"prefix": ["ansible.builtin.wait_for"],
		"body": [
			"- name: ${1:Description}",
			"  ansible.builtin.wait_for:",
			"    path: ${2:filiename}",
			"    state: ${3|present,absent|}",
			"    delay: ${5:delayInSeconds}",
			"$0"
		],
		"description": "Used for Ansible Wait_for Module",
		"scope": "ansible"
	},	

	"Ansible.BuiltIn.Yum_Repository":{
		"prefix": ["ansible.builtin.yum_repository"],
		"body": [
			"- name: Add Repository for ${1:RepoName}",
			"  ansible.builtin.yum_repository:",
			"    name: ${1:RepoName}",
			"    description: ${2}",
			"    baseurl: ${3:BaseUrl}",
			"    state: ${4|present,absent|}",
			"    enabled: ${5|yes,no|}",
			"$0"
		],
		"description": "Used for Ansible Yum Repository Module",
		"scope": "ansible"
	},

}