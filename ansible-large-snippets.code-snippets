{
    "Ansible.MakeOptAndUser":{
        "prefix": ["ansible.large.preinstall"],
        "body": [

            "- name: Add ${1:AppName} Services User",
            "  user: ",
            "    name: \"svc_${1:AppName}\"",
            "    create_home: no",
            "    force: yes",
            "    state: present",
            "    system: yes",
            "    shell: /bin/bash",
            "",
            "- name: Create ${1:AppName} storage directory",
            "  file:",
            "    path: /opt/${1:AppName}",
            "    state: directory",
            "    owner: \"svc_${1:AppName}\"",
            "    group: \"svc_${1:AppName}\"",
             
              "$0"


        ],
        "description": "Makes a folder in /opt/, creates a svc user for that opt, and a group for that svc user",
        "scope": "ansible"
    },

    "Ansible.StartBlock":{
        "prefix": ["ansible.large.startblock"],
        "body": [

            "#!/usr/bin/env ansible-playbook",
            "---",
            "- hosts: all",
            "  become: true",
            "  vars:",
            "     myvar: \"myvar\"",
            "  tasks: ",
            "",
            "     $0"

        ],
        "description": "Ansible Start Block",
        "scope": "ansible"
    },
	
    "Ansible.LatestGitRelease":{
        "prefix": ["ansible.large.git_latest"],
        "body": [

            " name: Get Github Latest Release asset",
            " block:" ,
            "   name: Get the latest tag from Github for ${1:Github_repo}",
            "   ansible.builtin.uri:",
            "     url: https://api.github.com/repos/${2:Github_User}/${3:Repo_Name}/releases/latest",
            "   register: latest_release",
            "",
            "   name: Print latest release details for ${1}",
            "   ansible.builtin.debug:",
            "     msg: |",
            "       Release name: {{ latest_release.name }}",
            "       Release tag: {{ latest_release.tag_name }}",
            "",
            "   name: Set variable for latest release tag without 'v'",
            "   set_fact:",
            "     latest_release_semver: {{ latest_release.tag_name | replace(\"v\",\"\")",
            "     $0",
            "",


        ],
        "description": "Ansible Get latest Git Release",
        "scope": "ansible"
    },

       "Ansible.MakeCommandVariable":{
           "prefix": ["ansible.large.command_variable"],
           "body": [
                "- name: Make command execution for ${1:my_command}",
                "  set_fact:",
                "    ${2:my_command}_var: >-",
                "      ${3:my_command}",
                "      ${4:raw_param}",
                "      --${5:param1} ${6:param1_val}",
                "      --${7:param2} ${8:param2_val}",
                "$0"
           ],
            "description": "Used for Ansible to make more complex commands",
            "scope": "ansible"
       },

       "Ansible.MakeStateCompleteFlag": {
        "prefix": ["ansible.large.state_complete_flag"],
        "body": [
          "- name: Check if ${1:condition_is_true}",
          "  ansible.builtin.stat:",
          "    path: \"{{ ${2:flag_name}_path }}\"",
          "  register: ${2:flag_name}",
          "",
          "$0",
          "  when: not ${2:flag_name}.stat.exists",
          "",
          "- name: Touch a file to demonstrate ${1:condition_is_true}",
          "  ansible.builtin.file:",
          "    path: \"{{ ${2:flag_name}_path }}\"",
          "    state: touch",
          "    mode: '0700'",
          "  when: not ${2:flag_name}.stat.exists"
        ],
        "description": "Used for Ansible create commands to support idempotence",
        "scope": "ansible"
      }



}